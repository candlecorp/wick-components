---
name: 'object'
kind: wick/component@v1
metadata:
  description: 'A component that will take differnet types of contents and parse them into a common object that can be used in the wick flow. Can also create and manipulate new / existing objects. Uses JsonPath notation.'
  authors: ['Candle Corporation']
  licenses: ['Apache-2.0']
  documentation: Source code available at https://github.com/candlecorp/wick-components/tree/main/components
  version: '0.2.0'
package:
  registry:
    host: registry.candle.dev
    namespace: common
component:
  kind: wick/component/wasmrs@v1
  ref: build/object.signed.wasm
  operations:
    - name: serialize
      inputs:
        - name: content
          type: string
        - name: content_type
          type: string
      outputs:
        - name: output
          type: object
    - name: new
      with:
        - name: key
          type: string
      inputs:
        - name: value
          type: object
      outputs:
        - name: output
          type: object
    - name: select
      inputs:
        - name: input
          type: object
        - name: path
          type: string
      outputs:
        - name: output
          type: object
    - name: push
      with:
        - name: path
          type: string
      inputs:
        - name: input
          type: object
        - name: value
          type: object
      outputs:
        - name: output
          type: object
tests:
  - cases:
      - name: new-test
        operation: new
        with:
          key: 'name'
        inputs:
          - name: value
            value: 'John'
        outputs:
          - name: output
            value: { 'name': 'John' }
          - name: output
            flags:
              done: true
      - name: select-test
        operation: select
        inputs:
          - name: input
            value: { 'name': 'John', 'age': 130, 'city': 'New York' }
          - name: path
            value: '$.city'
        outputs:
          - name: output
            value: 'New York'
          - name: output
            flags:
              done: true
      - name: select-nested-test
        operation: select
        inputs:
          - name: input
            value:
              {
                'name': 'John',
                'age': 130,
                'location':
                  { 'city': 'New York', 'state': 'NY', 'country': 'USA' },
              }
          - name: path
            value: '$.location.city'
        outputs:
          - name: output
            value: 'New York'
          - name: output
            flags:
              done: true
      - name: serialize-test-json
        operation: serialize
        inputs:
          - name: content
            value: '{ "name": "John", "age": 130, "city": "New York" }'
          - name: content_type
            value: 'application/json'
        outputs:
          - name: output
            value: { 'name': 'John', 'age': 130, 'city': 'New York' }
          - name: output
            flags:
              done: true
      - name: serialize-test-xml
        operation: serialize
        inputs:
          - name: content
            value: '<person><name>John</name><age>130</age><city>New York</city></person>'
          - name: content_type
            value: 'application/xml'
        outputs:
          - name: output
            value: { 'name': 'John', 'age': '130', 'city': 'New York' }
          - name: output
            flags:
              done: true
      - name: serialize-test-form-encode
        operation: serialize
        inputs:
          - name: content
            value: 'name=John&age=130&city=New%20York'
          - name: content_type
            value: 'application/x-www-form-urlencoded'
        outputs:
          - name: output
            value: { 'name': 'John', 'age': '130', 'city': 'New York' }
          - name: output
            flags:
              done: true
      - name: push-object
        operation: push
        with:
          path: '$.location'
        inputs:
          - name: input
            value:
              {
                'name': 'John',
                'age': 130,
                'location':
                  { 'city': 'New York', 'state': 'NY', 'country': 'USA' },
              }
          - name: value
            value: { 'zip': '44444' }
        outputs:
          - name: output
            value: {
                'name': 'John',
                'age': 130,
                'location':
                  { 'city': 'New York', 'state': 'NY', 'country': 'USA', 'zip': '44444' },
              }
          - name: output
            flags:
              done: true
      - name: push-string
        operation: push
        with:
          path: '$.location.zip'
        inputs:
          - name: input
            value:
              {
                'name': 'John',
                'age': 130,
                'location':
                  { 'city': 'New York', 'state': 'NY', 'country': 'USA' },
              }
          - name: value
            value: '44444'
        outputs:
          - name: output
            value: {
                'name': 'John',
                'age': 130,
                'location':
                  { 'city': 'New York', 'state': 'NY', 'country': 'USA', 'zip': '44444' },
              }
          - name: output
            flags:
              done: true
